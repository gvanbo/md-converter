name: PR Preview - Convert Markdown

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'md-downloads/**'
      - '*.py'
      - '.github/workflows/**'

jobs:
  preview-conversion:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout PR branch
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown beautifulsoup4
        
    - name: Run converter tests
      run: |
        # Test the converter without committing
        python md-converter.py --help
        
        # Check if md-downloads exists and has files
        if [ -d "md-downloads" ] && [ "$(ls -A md-downloads/*.md 2>/dev/null)" ]; then
          echo "✅ Found Markdown files to convert"
          python md-converter.py
          echo "✅ Conversion completed successfully"
        else
          echo "ℹ️ No Markdown files found in md-downloads/"
          mkdir -p md-downloads converted-html-descriptions
          echo "# Test File" > md-downloads/test.md
          echo "This is a test conversion." >> md-downloads/test.md
          python md-converter.py
          echo "✅ Test conversion completed"
        fi
        
    - name: Generate diff report
      run: |
        echo "# 📄 Conversion Preview Report" > pr-preview-report.md
        echo "" >> pr-preview-report.md
        echo "**PR:** #${{ github.event.number }}" >> pr-preview-report.md
        echo "**Branch:** ${{ github.event.pull_request.head.ref }}" >> pr-preview-report.md
        echo "**Author:** @${{ github.event.pull_request.user.login }}" >> pr-preview-report.md
        echo "" >> pr-preview-report.md
        
        if [ -d "converted-html-descriptions" ] && [ "$(ls -A converted-html-descriptions/ 2>/dev/null)" ]; then
          echo "## 📊 Conversion Results" >> pr-preview-report.md
          echo "" >> pr-preview-report.md
          echo "| File | Size (bytes) | Status |" >> pr-preview-report.md
          echo "|------|-------------|--------|" >> pr-preview-report.md
          
          for file in converted-html-descriptions/*.html; do
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              size=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || echo "unknown")
              echo "| $filename | $size | ✅ Generated |" >> pr-preview-report.md
            fi
          done
          
          echo "" >> pr-preview-report.md
          echo "## 📋 Sample Output" >> pr-preview-report.md
          echo "" >> pr-preview-report.md
          echo "First few lines of generated HTML:" >> pr-preview-report.md
          echo "" >> pr-preview-report.md
          echo "\`\`\`html" >> pr-preview-report.md
          head -10 converted-html-descriptions/*.html | head -20 >> pr-preview-report.md
          echo "\`\`\`" >> pr-preview-report.md
        else
          echo "## ⚠️ No HTML Generated" >> pr-preview-report.md
          echo "" >> pr-preview-report.md
          echo "No HTML files were generated. Check if:" >> pr-preview-report.md
          echo "- Markdown files exist in md-downloads/" >> pr-preview-report.md
          echo "- Files have .md extension" >> pr-preview-report.md
          echo "- Converter script is working correctly" >> pr-preview-report.md
        fi
        
    - name: Upload preview artifacts
      uses: actions/upload-artifact@v3
      with:
        name: pr-preview-${{ github.event.number }}
        path: |
          converted-html-descriptions/
          pr-preview-report.md
        retention-days: 7
        
    - name: Comment on PR
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          
          let reportContent = "# 🔄 Markdown Conversion Preview\n\n";
          
          try {
            if (fs.existsSync('pr-preview-report.md')) {
              reportContent += fs.readFileSync('pr-preview-report.md', 'utf8');
            } else {
              reportContent += "Preview report not found.";
            }
          } catch (error) {
            reportContent += `Error reading preview report: ${error.message}`;
          }
          
          reportContent += `\n\n---\n`;
          reportContent += `🔗 [Download Preview Files](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\n`;
          reportContent += `⚡ Triggered by: ${{ github.event_name }}\n`;
          reportContent += `🕒 Run ID: ${{ github.run_id }}`;
          
          // Find existing comment
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => 
            comment.user.type === 'Bot' && 
            comment.body.includes('🔄 Markdown Conversion Preview')
          );
          
          if (botComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body: reportContent
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: reportContent
            });
          }
