name: Convert and Deploy HTML

on:
  push:
    branches: [ main ]
    paths:
      - 'md-downloads/**'
  schedule:
    # Run daily at 2 AM UTC to catch any manual changes
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all files'
        required: false
        default: false
        type: boolean

env:
  PYTHON_VERSION: '3.9'
  
jobs:
  convert-markdown:
    runs-on: ubuntu-latest
    outputs:
      files-changed: ${{ steps.check-changes.outputs.changed }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for change detection
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-converter-v1
        restore-keys: |
          ${{ runner.os }}-pip-converter-
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown beautifulsoup4
        
    - name: Verify converter setup
      run: |
        python md-converter.py --help
        
    - name: Check for Markdown files
      id: check-md-files
      run: |
        if [ -d "md-downloads" ] && [ "$(ls -A md-downloads/*.md 2>/dev/null)" ]; then
          echo "found=true" >> $GITHUB_OUTPUT
          echo "count=$(ls md-downloads/*.md | wc -l)" >> $GITHUB_OUTPUT
        else
          echo "found=false" >> $GITHUB_OUTPUT
          echo "count=0" >> $GITHUB_OUTPUT
        fi
        
    - name: Create directories
      run: |
        mkdir -p md-downloads
        mkdir -p converted-html-descriptions
        
    - name: Convert Markdown files
      if: steps.check-md-files.outputs.found == 'true'
      run: |
        echo "Converting ${{ steps.check-md-files.outputs.count }} Markdown files..."
        python md-converter.py
        
    - name: Generate conversion report
      if: steps.check-md-files.outputs.found == 'true'
      run: |
        echo "# Conversion Report" > conversion-report.md
        echo "Date: $(date)" >> conversion-report.md
        echo "Files processed: ${{ steps.check-md-files.outputs.count }}" >> conversion-report.md
        echo "" >> conversion-report.md
        echo "## Generated Files:" >> conversion-report.md
        ls -la converted-html-descriptions/ >> conversion-report.md
        
    - name: Check for changes
      id: check-changes
      run: |
        git add .
        if git diff --staged --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "No changes detected"
        else
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "Changes detected"
        fi
        
    - name: Commit changes
      if: steps.check-changes.outputs.changed == 'true'
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git commit -m "ü§ñ Auto-convert Markdown to HTML
        
        - Processed ${{ steps.check-md-files.outputs.count }} Markdown files
        - Generated HTML with UTF-8 sanitization
        - Applied Moodle-compatible filtering
        
        [skip ci]"
        git push
        
    - name: Upload HTML artifacts
      if: steps.check-md-files.outputs.found == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: html-files-${{ github.sha }}
        path: |
          converted-html-descriptions/
          conversion-report.md
        retention-days: 90
        
    - name: Create release on tag
      if: startsWith(github.ref, 'refs/tags/') && steps.check-changes.outputs.changed == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: HTML Conversion ${{ github.ref }}
        body: |
          Automated HTML conversion from Markdown files.
          
          üìä **Stats:**
          - Files processed: ${{ steps.check-md-files.outputs.count }}
          - Commit: ${{ github.sha }}
          
          üìÅ **Download the converted HTML files from the artifacts below.**
        draft: false
        prerelease: false

  deploy-to-github-pages:
    runs-on: ubuntu-latest
    needs: convert-markdown
    if: needs.convert-markdown.outputs.files-changed == 'true' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Download HTML artifacts
      uses: actions/download-artifact@v3
      with:
        name: html-files-${{ github.sha }}
        path: ./public
        
    - name: Create index page
      run: |
        cat > ./public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Course Descriptions</title>
            <style>
                body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                h1 { color: #333; border-bottom: 2px solid #ddd; }
                .file-list { list-style: none; padding: 0; }
                .file-list li { margin: 10px 0; }
                .file-list a { text-decoration: none; color: #0066cc; padding: 10px; display: block; border: 1px solid #ddd; border-radius: 5px; }
                .file-list a:hover { background-color: #f5f5f5; }
            </style>
        </head>
        <body>
            <h1>üìö Course Descriptions</h1>
            <p>Automatically converted from Markdown files</p>
            <ul class="file-list">
        EOF
        
        for file in ./public/converted-html-descriptions/*.html; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            echo "                <li><a href=\"converted-html-descriptions/$filename\">$filename</a></li>" >> ./public/index.html
          fi
        done
        
        cat >> ./public/index.html << 'EOF'
            </ul>
            <hr>
            <p><small>Last updated: $(date)</small></p>
        </body>
        </html>
        EOF
        
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./public
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  notify-completion:
    runs-on: ubuntu-latest
    needs: [convert-markdown, deploy-to-github-pages]
    if: always()
    
    steps:
    - name: Send notification
      if: needs.convert-markdown.outputs.files-changed == 'true'
      run: |
        echo "‚úÖ Conversion completed successfully!"
        echo "üìä Check the Actions tab for detailed logs"
        echo "üåê View results at: ${{ needs.deploy-to-github-pages.outputs.page_url || 'GitHub Pages not configured' }}"
